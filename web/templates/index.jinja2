{% extends "base.jinja2" %}

{% block body %}

<style type="text/css">
    html, body, .row {height:100%; width:100%; margin: 0; }
    .container {height:100%;  width:100%;margin: 0}
    .body{
        padding-top:45px;
    }

    .google-wrapper {
        position: relative;
        height:100%;
    }

    #google-map {
        height:100%;
{#        position:absolute;#}
    }
    #google-map-overlay:hover{
        opacity: 1;
    }
    #google-map-overlay {
        pointer-events:none;
        height:100%;
        width:100%;
        padding-top:60px;
        position: absolute;

        opacity: 0.5;
        top: 0px;
        left: 0px;
        z-index: 2;
    }
    .nav {
        height:45px;
        width:100%;
        border-radius:0px;
        border:0px;
        margin-bottom:0px;
        position: absolute;
        z-index: 3;
        background: #ffffff; /* Old browsers */
        background: -moz-linear-gradient(left,  #ffffff 11%, #ffffff 11%, #009db2 11%); /* FF3.6-15 */
        background: -webkit-linear-gradient(left,  #ffffff 11%,#ffffff 11%,#009db2 11%); /* Chrome10-25,Safari5.1-6 */
        background: linear-gradient(to right,  #ffffff 11%,#ffffff 11%,#009db2 11%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#009db2',GradientType=1 ); /* IE6-9 */


    }
    .labels {
      color: white;
      font-family: "Lucida Grande", "Arial", sans-serif;
      font-weight: bold;
      font-size: 10px;
      text-align: center;
      width: 30px;
      white-space: nowrap;

    }
    .markerAnimation{
      -webkit-animation: pulse 5s 0s infinite;
      animation: pulse 5s 0s infinite;
    }
    @-webkit-keyframes pulse {
     40% {
        -webkit-transform: scale(1.5);
        -moz-transform: scale(1.5);
        transform: scale(1.5);
      }

      60% {
        -webkit-transform: scale(1);
        -moz-transform: scale(1);
        transform: scale(1);
      }
    }
    @keyframes pulse {
      40% {
        -webkit-transform: scale(1.5);
        -moz-transform: scale(1.5);
        transform: scale(1.5);
      }

      60% {
        -webkit-transform: scale(1);
        -moz-transform: scale(1);
        transform: scale(1);
      }
    }
</style>

 <body>
<nav class=" navbar navbar-default nav">
    <div class="container-fluid" style="padding-top:7px">
        <div class="row">
            <div class="col-md-1 col-xs-1 col-sm-1 " >
                <img class="img-responsive" style="padding-left: 5px; padding-top:-2px;" src="static/img/Runr_logo.png"/>
            </div>
            <div class="col-md-2 col-xs-2 col-xs-offset-3 col-md-offset-4" style="padding:3px">
                <b style="color:white; font-size:1.5em" id="timerText">00:34:44</b>
            </div>
            <div class="col-md-2 col-xs-4 col-xs-offset-1 col-md-offset-3">
                <div class="form-group has-feedback ">
                    <i class="glyphicon glyphicon-search form-control-feedback"></i>
                    <input id="runnerSearch" type="text" class="form-control" placeholder="Search by Name, Bib #"/>
                </div>
            </div>
        </div>
    </div>
</nav>
{#<div class="body">#}
{#    <div class="container">#}
{#            <div class="col-md-6" >#}
{#                Hi#}
        {#            <div id="google-map" ></div>#}
{#            </div>#}
{#        </div>#}
{#    </div>#}
{#</div>#}
<div class="google-wrapper body">
{#    <div class="row">#}
{#        <div class="col-md-3" style="height:100%">#}
{#            Hi#}
{#    border-color:#007E96; border-width:1px; border-style:solid;#}
        <div id="google-map" ></div>
        <div id="google-map-overlay">
            <div class="container">
                <div class="row">

                    <div style="background-color:#4A4A4A; border-radius:4px; pointer-events: all" class="col-md-2 col-md-offset-10">
                        <img style="width:50px; height:50px;margin:10px; float:left" src="static/img/owl.png"/>
                        <div style="float:left; padding:10px; padding-bottom:0px">
                            <b id="runner_name" style="color:white">Phil Bayliss</b>
                            </br>
                            <div style="color:white">Age: Undefined</div>
                            <div id="runner_weight" style="color:white">Weight: Undefined</div>

                        </div>
                        <div style="float:left; padding:10px; color:white">
                            <div style="color:white">Average Speed: 50km/s</div>
                            <div style="color:white">Projected Finish: 50th</div>
                            <div style="color:white">Projected Time to Finish: 1:45:43</div>

                        </div>
                    </div>
                    <div id="expandedChartView" style="background-color:#4A4A4A; display:none; border-radius:4px; margin-top: 15px; margin-bottom:15px; pointer-events: all;  height:60%; position:absolute; top:10%" class="col-md-8 col-md-offset-1">
                        <b style="color:white">I AM AM EXPANDED VIEW OF THE CHART IN THE BOTTOM RIGHT</b>
                    </div>
                    <div style="background-color:#4A4A4A; border-radius:4px; pointer-events: all; position: fixed;bottom: 10px;right:10px" class="col-md-2 col-md-offset-10">
                        <div style="color:white; text-align: center">Total Cluster Count: 550</div>
                        <div style="color:white;padding: 5px; height:175px">
                            <div style="height:80%">I AM A CHART AND I GO HERE</div>
                            <div style="vertical-align: bottom;float: none;">
                                <button id="expandChart" class="btn btn-default btn-xs pull-right">
                                    <small><span class="glyphicon glyphicon-new-window"></span></small>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
</div>
{##}
            {#        <div class="container">#}

{#</div>#}
{#        #}
{#            <div class="col-md-1" style="background-color:#ffffff;">Hi</div>#}
{#        </div>#}
    <script>
        $('#runnerSearch').bind("enterKey",function(e){
            $.ajax({
                'url':'/search_for_runner',
                'data': {
                    'query':$("#runnerSearch").val()
                },
                success: function(data)
                {
                    runner_object = JSON.parse(data);
                    console.log(runner_object);
                    $("#runner_weight").text(runner_object.weight);
                    $("#runner_name").text(runner_object.given_name);
                }
            })
           //do stuff here
        });
        $('#runnerSearch').keyup(function(e){
            if(e.keyCode == 13)
            {
                $(this).trigger("enterKey");
            }
        });

        $("#expandChart").click(function()
        {
            $("#expandedChartView").toggle();
        })
        function updateTimer() {
            $.ajax({
                'url': '/get_timer_tick',
                success: function (time) {
                    $("#timerText").text(pad(Math.floor(time / 3600),2) + ":" + pad(Math.floor((time % 3600) / 60),2) + ":" + pad(time % 60,2))
                }
            })
        }
        function pad(n, width) {
            var n = n + '';
            return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n;
        }
        var markers = []
        function initMap() {
            map = new google.maps.Map(document.getElementById('google-map'), {
                zoom: 12,
                center: {lat: 40.621906, lng: -74.032435},
                streetViewControl: false,
                mapTypeControl: false,
                disableDefaultUI: true
            });
            $.ajax({
                url:'/get_route_coordinates',
                success:function(data)
                {
                    polyLineCoordinates = []
                    JSON.parse(data).forEach(function(route_cords) {
                        if(polyLineCoordinates.length == 0) {
                            polyLineCoordinates.push(route_cords);
                        }
                        for(var i = 0; i < polyLineCoordinates.length; i++)
                        {

                            if(polyLineCoordinates[i].location_id > route_cords.location_id)
                            {
                                polyLineCoordinates.splice(i, 0, route_cords);
                                break;
                            }
                            else if(i == polyLineCoordinates.length -1 && polyLineCoordinates[i].location_id < route_cords.location_id)
                            {
                                polyLineCoordinates.push(route_cords);
                            }
                        }
                    });
                    var path = new google.maps.Polyline({
                        path: polyLineCoordinates,
                        geodesic: true,
                        strokeColor: '#009db2',
                        strokeOpacity: 1.0,
                        strokeWeight: 4
                    });

                    path.setMap(map);
                }
            })
            google.maps.event.addListener(map, 'idle', function() {
                $.ajax({
                url:'/geospatial_clustering',
                data:{
                    screenWidth: $("#google-map").width(),
                    screenHeight: $("#google-map").height(),
                    latitudeStart: map.getBounds().getNorthEast().lat(),
                    longitudeStart: map.getBounds().getSouthWest().lng(),
                    latitudeDistance: map.getBounds().getSouthWest().lat() - map.getBounds().getNorthEast().lat(),
                    longitudeDistance: map.getBounds().getSouthWest().lng() - map.getBounds().getNorthEast().lng()
                },
                success: function(data)
                {
                    clearMarkers();
                    JSON.parse(data).forEach(function(box)
                    {
                        if(box.count > 0) {
                            var countLatLng = {lat: box.latitude, lng: box.longitude};
                            markers.push(new MarkerWithLabel({
                                position: countLatLng,
                                map: map,
                                labelContent: box.count.toString(),
                                labelAnchor: new google.maps.Point(15, 7),
                                labelClass: "labels", // the CSS class for the label
                                labelInBackground: false,
                                icon: pinSymbol('#383838'),
                                title: 'clusterCount'
                              }));

                        }
                    });

                }
            })

            });
        }
        function updateClusterMarkers()
        {
            $.ajax({
                url:'/geospatial_clustering',
                data:{
                    screenWidth: $("#google-map").width(),
                    screenHeight: $("#google-map").height(),
                    latitudeStart: map.getBounds().getNorthEast().lat(),
                    longitudeStart: map.getBounds().getSouthWest().lng(),
                    latitudeDistance: map.getBounds().getSouthWest().lat() - map.getBounds().getNorthEast().lat(),
                    longitudeDistance: map.getBounds().getSouthWest().lng() - map.getBounds().getNorthEast().lng()
                },
                success: function(data)
                {
                    var i = 0;
                    JSON.parse(data).forEach(function(box)
                    {
                        if(box.count > 0) {
                            markers[i].labelContent = box.count.toString();
                            markers[i].label.draw()
                            i++;
                        }
                    });
                }
            })

        }
        function clearMarkers()
        {
            for(var i = 0; i < markers.length; i++)
            {
                markers[i].setMap(null)
            }
            markers = []

        }
        function pinSymbol(color) {
          return {
            path:  google.maps.SymbolPath.CIRCLE ,
            fillColor: color,
            fillOpacity: 1,
            strokeColor: '#000',
            strokeWeight: 2,
            scale: 20
          };
        }


        setInterval(updateTimer, 1000)
        setInterval(updateClusterMarkers, 5000)
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDuNqpFE8a9dKuIINC91jdzd0IWJ1js-bw&callback=initMap&libraries=geometry"></script>
    <script src="http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerwithlabel/src/markerwithlabel.js"></script>
</body>
{% endblock %}

{#        mapMarkers = []#}
{#        usedMapMarkers = []#}
{#        map;#}
{#        function drawMarkers()#}
{#        {#}
{#            $.ajax({#}
{#                url: '/get_unique_runner_positions',#}
{#                success: function (data) {#}
{#                    var coordinates = JSON.parse(data);#}
{#                    for(var i = 0; i < coordinates.length; i++)#}
{#                    {#}
{#                        if(i < mapMarkers.length + usedMapMarkers.length)#}
{#                        {#}
{#                            var lowest = mapMarkers[0]#}
{#                            var lowestDistance =  coordinates[i].location_id - mapMarkers[0].location_id;#}
{#                            for(var j = 0; j < mapMarkers.length; j++)#}
{#                            {#}
{#                                var distance = coordinates[i].location_id - mapMarkers[j].location_id;#}
{#                                if( distance >= 0 && distance < lowestDistance)#}
{#                                {#}
{#                                    lowest = mapMarkers[0];#}
{#                                    lowest.location_id = coordinates[i].location_id;#}
{#                                }#}
{#                            }#}
{##}
{#                            var index = mapMarkers.indexOf(lowest);#}
{#                            if(index > -1) {#}
{#                                usedMapMarkers.push(mapMarkers[index])#}
{#                                mapMarkers.splice(index, 1);#}
{#                            }#}
{#                            if(lowestDistance > 0) {#}
{#                                var newLatLng = new google.maps.LatLng(coordinates[i].latitude, coordinates[i].longitude);#}
{#                                lowest.mapMarker.animateTo(newLatLng);#}
{#                            }#}
{##}
{#                        }#}
{#                        else#}
{#                        {#}
{##}
{#                            if(coordinates[i] != undefined) {#}
{#                                var runner =  new SlidingMarker({#}
{#                                    position: {lat: coordinates[i].latitude, lng: coordinates[i].longitude},#}
{#                                    map: map,#}
{#                                    duration: 1000,#}
{#                                    easing: "easeOutExpo",#}
{#                                    icon: {#}
{#                                        path: google.maps.SymbolPath.CIRCLE,#}
{#                                        scale: 2#}
{#                                    },#}
{#                                    flat: true,#}
{#                                    clickable: false,#}
{#                                });#}
{#                                mapMarkers.push({#}
{#                                    "mapMarker":runner,#}
{#                                    "location_id":coordinates[i].location_id#}
{#                                });#}
{#                            }#}
{#                        }#}
{#                    }#}
{#                    mapMarkers = mapMarkers.concat(usedMapMarkers);#}
{#                    usedMapMarkers = [];#}
{#                }#}
{#            });#}
{#        }#}
{##}